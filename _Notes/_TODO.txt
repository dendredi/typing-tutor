* SUBTYPING
	- typedef int A; typedef A s; --> Extend AST wrapper

* Implement Literals (especially in typeEnvironment) properly, e.g. handle arrays, structs etc..
* Add special handling for binary expression ->
* Array init with {...} ?
* init empty array with fixed size? e.g. int a[11];
* Recursion not working because of typeEnvironment..
* Duplicate identifier in scope error!
* Variable declaration without assignment (check value in parser)?
* Add abstraction to variable-declarations (own folder, then e.g. same impl of performTypeCheck)
* Implement 'FunctionDefinition' (not only ...Declaration)
* Somehow also render TypingTree when error occurs
* compare function return type and actual return --> throw error if needed
* Why does StructDefinition implement Declaration?!
* Clearify: Is it really required to split code into "ast" and "typing" --> Introduce subclass "TypeExpression"